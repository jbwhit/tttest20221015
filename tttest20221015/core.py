# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['raw', 'shows', 'movies', 'foo', 'raw_to_clean']

# %% ../nbs/00_core.ipynb 3
def foo(): pass

# %% ../nbs/00_core.ipynb 7
# %config InlineBackend.figure_format = 'retina'
import datetime
import hashlib
import json
import os
import re
import sys
import time
import warnings

import ipywidgets as widgets
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from matplotlib.ticker import FuncFormatter
from pandas.plotting import register_matplotlib_converters

register_matplotlib_converters()
import seaborn as sns

sns.set()
sns.set_context("poster", font_scale=1.3)
plt.rcParams["figure.figsize"] = 10, 6
pd.options.display.max_columns = None
pd.options.display.max_rows = None
pd.options.display.precision = 4
warnings.simplefilter(action="ignore", category=FutureWarning)

# %% ../nbs/00_core.ipynb 9
raw = pd.read_csv(
    "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-20/netflix_titles.csv"
)

# %% ../nbs/00_core.ipynb 10
def raw_to_clean(df_):
    df_ = (df_
        .assign(date_added=pd.to_datetime(df_["date_added"]))
        .assign(rating=df_['rating'].astype('category'))
        .assign(type=df_['type'].astype('category'))
    )
    shows = df_.query("type == 'TV Show'")
    movies = (df_
        .query("type != 'TV Show'")
#         .assign(duration=['duration'].str.split().str[0])
    )
    return shows, movies


shows, movies = raw_to_clean(raw)
shows.head()

# %% ../nbs/00_core.ipynb 11
shows['duration'].value_counts()
